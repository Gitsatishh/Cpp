1.	 Write a program that checks if a given year is a leap year or not. Use an if-else statement and logical operators to make the determination.
2.	Create a C++ program that takes an integer as input and prints whether it is positive, negative, or zero using if-else statements.
3.	Write a program that takes the current time as input and prints a message based on whether it's morning, afternoon, evening, or night.
4.	Develop a program that checks the availability of a product in a store. If the product is in stock(greater than 1) and the user has a valid membership, they can purchase it; otherwise, display an "Out of stock" message.
5.	Create a basic ATM system where the user can withdraw money. Use if-else statements to check the account balance and handle withdrawal limits.
______________________________________________________________________________________________________________

                                             ANSWERS
______________________________________________________________________________________________________________
/*Q.1) Write a program that checks if a given year is a leap year or not. Use an if-else statement and logical operators to make
the determination.*/
#include<bits/stdc++.h>
using namespace std;
void lyear()
{
      // Get the current time point
    auto now =chrono::system_clock::now();

    // Convert the current time point to a time_t object
    time_t now_time = chrono::system_clock::to_time_t(now);

    // Convert the time_t object to a struct tm object
    tm *time_info = localtime(&now_time);

    // Extract the current year from the struct tm object
    int current_year = time_info->tm_year + 1900;
      if(current_year%4==0)
   {
       if(current_year%100==0)
       {
           if(current_year%400==0)
           {
               cout<<"This year is a leap year";
           }
           else
           {
               cout<<"This year is Not a leap year";
           }
       }
       else
       {
           cout<<"This year is a leap year";
       }
   }
   else
   {
       cout<<"This year is not a leap year";
   }
}
int main()
{
    int num;
    cout<<"Press 1 to check current year is leap year or not"<<endl<<"Press 2 to check particular year is leap year or not\n";
    cin>>num;
    if(num==1)
    {
        lyear();
    }
    else if(num==2)
    {
        int year;
        cout<<"Enter the year to check the entered year is leap year or not\n";
        cin>>year;
          if(year%4==0)
   {
       if(year%100==0)
       {
           if(year%400==0)
           {
               cout<<"Entered year is a leap year";
           }
           else
           {
               cout<<"Entered year is Not a leap year";
           }
       }
       else
       {
           cout<<"Entered year is a leap year";
       }
   }
   else
   {
       cout<<"Entered year is not a leap year";
   }
    }
    else{cout<<"Enter between 1 and 2 only";}
    return 0;
}
_____________________________________________________


//Q.2)Create a C++ program that takes an integer as input and prints whether it is positive, negative, or zero using if-else statements.
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int number;
    cout<<"Enter a number: ";
    cin>>number;
     if (number > 0)
    {
        cout << "The number is positive." <<endl;
    } 
    else if (number < 0) 
    {
        cout << "The number is negative." <<endl;
    }
    else 
    {
        cout << "The number is zero." <<endl;
    }
    return 0;
}

_________________________________________________________________


//Q.3)Write a program that takes the current time as input and prints a message based on whether it's morning, afternoon, evening, or night.
#include <bits/stdc++.h> 
using namespace std;  
int main() 
{ 
    auto now = chrono::system_clock::now();

    // Convert the current time point to a time_t object
    time_t now_time =chrono::system_clock::to_time_t(now);

    // Convert the time_t object to a struct tm object
    tm *time_info = localtime(&now_time);

    // Extract the current hour from the struct tm object
    int current_hour = time_info->tm_hour;
    
    if(current_hour>5&&current_hour<13)
    {
        cout<<"Morning";
    }
    else if(current_hour>12&&current_hour<18)
    {
        cout<<"Afternoon";
    }
    else if(current_hour>17&&current_hour<22)
    {
        cout<<"Evening";
    }
    else if(current_hour>21&&current_hour<6)
    {
        cout<<"Night";
    }
} 
____________________________________________________________________

/*Q.4)Develop a program that checks the availability of a product in a store. If the product is in stock(greater than 1)and the user has a valid
membership, they can purchase it; otherwise, display an "Out of stock" message.*/
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int quantity;
    cout<<"Enter the quantity of stock\n";
    cin>>quantity;
    bool valid_membership;
    cout<<"Enter 1 if you have a valid membership otherwise enter 0\n";
    cin>>valid_membership;
    if(quantity>1 && valid_membership)
    {
        cout<<"You can purchase it";
    }
    else
    {
        cout<<"Out of stock";
    }    
    
    return 0;
}

__________________________________________________________________
//Q.5)Create a basic ATM system where the user can withdraw money. Use if-else statements to check the account balance and handle withdrawal limits.
#include<bits/stdc++.h>
using namespace std;
int main() {
    try {
        int withdraw, acc = 200;
        cout << "Enter the amount you want to withdraw\n";
        cin >> withdraw;

        if (withdraw > acc) {
            throw runtime_error("Insufficient Balance");
        } else if (acc < 500) {
            throw runtime_error("Insufficient Balance (Account Balance is less than 500)");
        } else if ((withdraw % 500) != 0) {
            throw invalid_argument("Not in multiple of 5");
        } else {
            acc = acc - withdraw;
            cout << "Withdraw amount: " << withdraw << "\n";
            cout << "Account Balance left: " << acc;
        }
    }
    catch (const exception& e) {
        cerr << "Error: " << e.what() << endl;
    }

    return 0;
}
_____________________________________________________________________S
